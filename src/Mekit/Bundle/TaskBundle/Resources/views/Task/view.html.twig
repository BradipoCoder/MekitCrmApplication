{% extends 'OroUIBundle:actions:view.html.twig' %}

{% set fullname = entity.name|default('N/A'|trans) %}
{% oro_title_set({params : {"%event.name%": fullname} }) %}

{% block stats %}
	{% if breadcrumbs.entity.event is defined %}
		<li>{{ 'oro.ui.created_at'|trans }}: {{ breadcrumbs.entity.event.createdAt ? breadcrumbs.entity.event.createdAt|oro_format_datetime : 'N/A' }}</li>
		<li>{{ 'oro.ui.updated_at'|trans }}: {{ breadcrumbs.entity.event.updatedAt ? breadcrumbs.entity.event.updatedAt|oro_format_datetime : 'N/A' }}</li>
	{% endif %}
{% endblock stats %}

{% block navButtons %}
	{% if resource_granted('EDIT', entity) %}
		{{ UI.editButton({
		'path': path('mekit_task_update', {'id': entity.id}),
		'entity_label': 'mekit.task.entity_label'|trans
		}) }}
	{% endif %}

	{% if resource_granted('DELETE', entity) %}
		{{ UI.deleteButton({
		'dataUrl': path('mekit_api_delete_task', {'id': entity.id}),
		'dataRedirect': path('mekit_task_index'),
		'aCss': 'no-hash remove-button',
		'dataId': entity.id,
		'id': 'btn-remove-task',
		'entity_label': 'mekit.task.entity_label'|trans
		}) }}
	{% endif %}

	{% if resource_granted('mekit_worklog_create') %}
		{# removed from 'widget' key because implemented in update.html.twig: reload-grid-name' : 'worklogs-related-to-task' #}
		{% set dialogTitle = 'mekit.worklog.widgets.worklog_add.title'|trans %}
		{{ UI.clientButton({
			'dataUrl': path('mekit_worklog_create', { 'taskId': entity.id }),
			'aCss': 'no-hash',
			'iCss': 'icon-plus-sign',
			'dataId': entity.id,
			'title' : dialogTitle,
			'label' : dialogTitle,
			'widget' : {
				'type' : 'dialog',
				'multiple' : false,
				'options' : {
					'alias': 'worklog-dialog',
					'stateEnabled': false,
					'dialogOptions' : {
						'title' : dialogTitle,
						'allowMaximize': false,
						'allowMinimize': false,
						'width': 600
					}
				}
			}
		}) }}
	{% endif %}

{% endblock navButtons %}



{% block pageHeader %}
	{% set breadcrumbs = {
	'entity': entity,
	'indexPath': path('mekit_task_index'),
	'indexLabel': 'mekit.task.entity_plural_label'|trans,
	'entityTitle': fullname
	} %}
	{{ parent() }}
{% endblock pageHeader %}


{% block content_data %}
	{% set taskInformationWidget %}
		{{ oro_widget_render({
		'widgetType': 'block',
		'title': 'mekit.task.widgets.task_information'|trans,
		'url': path('mekit_task_widget_info', {id: entity.id})
		}) }}
	{% endset %}

	{% set eventInformationWidget %}
		{{ oro_widget_render({
			'widgetType': 'block',
			'url': path('mekit_event_widget_info', {id: entity.event.id})
		}) }}
	{% endset %}

	{% set dataBlocks = [
		{
			'title': 'mekit.task.sections.general'|trans,
			'class': 'active',
			'subblocks': [
				{'data' : [taskInformationWidget, eventInformationWidget]}
			]
		}
	] %}


	{% set relatedWorklogs %}
	{{ oro_widget_render({
		'widgetType': 'block',
		'url': path('mekit_crm_widget_related', {datagrid_name: "worklogs-related-to-task", id: entity.id})
	}) }}
	{% endset %}
	{% if relatedWorklogs is not empty %}
		{% set dataBlocks = dataBlocks|merge([{
		'title': 'mekit.task.worklogs.label'|trans,
		'subblocks': [{'data': [relatedWorklogs], 'spanClass': 'empty'}]
		}]) %}
	{% endif %}


	{% set relatedAccounts %}
	{{ oro_widget_render({
		'widgetType': 'block',
		'url': path('mekit_crm_widget_related', {datagrid_name: "tasks-related-accounts", id: entity.id})
	}) }}
	{% endset %}
	{% if relatedAccounts is not empty %}
		{% set dataBlocks = dataBlocks|merge([{
		'title': 'mekit.task.accounts.label'|trans,
		'subblocks': [{'data': [relatedAccounts], 'spanClass': 'empty'}]
		}]) %}
	{% endif %}


	{% set relatedContacts %}
	{{ oro_widget_render({
		'widgetType': 'block',
		'url': path('mekit_crm_widget_related', {datagrid_name: "tasks-related-contacts", id: entity.id})
	}) }}
	{% endset %}
	{% if relatedContacts is not empty %}
		{% set dataBlocks = dataBlocks|merge([{
		'title': 'mekit.task.contacts.label'|trans,
		'subblocks': [{'data': [relatedContacts], 'spanClass': 'empty'}]
		}]) %}
	{% endif %}


	{% set relatedCalls %}
	{{ oro_widget_render({
		'widgetType': 'block',
		'url': path('mekit_crm_widget_related', {datagrid_name: "tasks-related-calls", id: entity.id})
	}) }}
	{% endset %}
	{% if relatedCalls is not empty %}
		{% set dataBlocks = dataBlocks|merge([{
		'title': 'mekit.task.calls.label'|trans,
		'subblocks': [{'data': [relatedCalls], 'spanClass': 'empty'}]
		}]) %}
	{% endif %}


	{% set relatedMeetings %}
	{{ oro_widget_render({
		'widgetType': 'block',
		'url': path('mekit_crm_widget_related', {datagrid_name: "tasks-related-meetings", id: entity.id})
	}) }}
	{% endset %}
	{% if relatedMeetings is not empty %}
		{% set dataBlocks = dataBlocks|merge([{
		'title': 'mekit.task.meetings.label'|trans,
		'subblocks': [{'data': [relatedMeetings], 'spanClass': 'empty'}]
		}]) %}
	{% endif %}


	{% set relatedUsers %}
	{{ oro_widget_render({
		'widgetType': 'block',
		'url': path('mekit_crm_widget_related', {datagrid_name: "tasks-related-users", id: entity.id})
	}) }}
	{% endset %}
	{% if relatedUsers is not empty %}
		{% set dataBlocks = dataBlocks|merge([{
		'title': 'mekit.task.users.label'|trans,
		'subblocks': [{'data': [relatedUsers], 'spanClass': 'empty'}]
		}]) %}
	{% endif %}


	{% set id = 'eventTaskView' %}
	{% set data = {'dataBlocks': dataBlocks} %}

	{{ parent() }}
{% endblock content_data %}
