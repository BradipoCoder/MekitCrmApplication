datagrid:

    # filters out all entities which 'reference' OR a're referred to by' a specific ReferenceableElement (ref_el_id)
    # USAGE:
    #   1) extending datagrid must define "referenceableElement" through inner join
    #   2) parameter "ref_el_id" must be defined for which we are checking references/referrals
    # PROVIDES:
    # 1) filter on filter on "referenceableElement" having REFERENCES TO the referenceableElement identified by "ref_el_id"
    # 2) filter on filter on "referenceableElement" having REFERRALS FROM the referenceableElement identified by "ref_el_id"
    # 3) "referenceableElement_reference" and "referenceableElement_referral" through left join
    # 4) field("referenceDirection")+column("direction") with values: IN(if it is a reference) | OUT(if it is a referral)
    #@todo: rename to: relationship-related-elements-filtered-list:
    relationship-related-element-source-logic:
        source:
            type: orm
            query:
                select:
                    - CASE WHEN referenceableElement_reference IS NOT NULL THEN 'IN' ELSE 'OUT' END as referenceDirection
                join:
                    left:
                        - { join: referenceableElement.references, alias: referenceableElement_reference }
                        - { join: referenceableElement.referrals, alias: referenceableElement_referral }
                where:
                    and:
                        - (referenceableElement_reference.id = :ref_el_id OR referenceableElement_referral.id = :ref_el_id)
            bind_parameters:
                - ref_el_id
        columns:
            direction:
                data_name:      referenceDirection
                label:          mekit.relationship.direction.label
                type:           twig
                frontend_type:  html
                template:       MekitRelationshipBundle:Relationship:Datagrid/Property/directionIcon.html.twig

    # checks and sets the 'isAssigned' field for extending datagrid where is assigned is referred to the a specific ReferenceableElement (ref_el_id)
    relationship-related-elements-select-logic:
        source:
            type:           orm
            acl_resource:   mekit_account_account_view
            query:
                select:
                    - >
                        (CASE WHEN
                            (MAX
                                (CASE WHEN
                                    (referencedElement.id = :ref_el_id) THEN 1
                                ELSE
                                    (CASE WHEN
                                        (referralElement.id = :ref_el_id) THEN 1
                                    ELSE 0
                                    END)
                                END)
                            ) = 1 THEN true ELSE false
                        END) as isAssigned
                join:
                    left:
                        -
                            join: referenceableElement.references
                            alias: referencedElement
                            conditionType: 'WITH'
                            condition: 'referencedElement.id = :ref_el_id OR (referencedElement.id IN (:data_in) AND referencedElement.id NOT IN (:data_not_in))'
                        -
                            join: referenceableElement.referrals
                            alias: referralElement
                            conditionType: 'WITH'
                            condition: 'referralElement.id = :ref_el_id OR (referralElement.id IN (:data_in) AND referralElement.id NOT IN (:data_not_in))'
                groupBy: referenceableElement.id

            bind_parameters:
                - ref_el_id
        columns:
            isAssigned:
                label:         mekit.relationship.assigned.label
                editable:      true
                frontend_type: boolean

